/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2`s complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

	PARTS:

	//-------Not


    Not (in = zx, out = nox);
    Not (in = zy, out = noy);
	Not (in = f, out = nf);
	

	//-------M_C
	
	Nand (a = x[0], b = nox, out = m1X0);
	Nand (a = y[0], b = noy, out = m2X0);
	Not (in = m1X0, out = m3X0);
	Not (in = m2X0, out = m4X0);
	Xor (a = m3X0, b = nx, out = cxX0);
	Xor (a = m4X0, b = ny, out = cyX0);

	Nand (a = x[1], b = nox, out = m1X1);
	Nand (a = y[1], b = noy, out = m2X1);
	Not (in = m1X1, out = m3X1);
	Not (in = m2X1, out = m4X1);
	Xor (a = m3X1, b = nx, out = cxX1);
	Xor (a = m4X1, b = ny, out = cyX1);

	Nand (a = x[2], b = nox, out = m1X2);
	Nand (a = y[2], b = noy, out = m2X2);
	Not (in = m1X2, out = m3X2);
	Not (in = m2X2, out = m4X2);
	Xor (a = m3X2, b = nx, out = cxX2);
	Xor (a = m4X2, b = ny, out = cyX2);

	Nand (a = x[3], b = nox, out = m1X3);
	Nand (a = y[3], b = noy, out = m2X3);
	Not (in = m1X3, out = m3X3);
	Not (in = m2X3, out = m4X3);
	Xor (a = m3X3, b = nx, out = cxX3);
	Xor (a = m4X3, b = ny, out = cyX3);

	Nand (a = x[4], b = nox, out = m1X4);
	Nand (a = y[4], b = noy, out = m2X4);
	Not (in = m1X4, out = m3X4);
	Not (in = m2X4, out = m4X4);
	Xor (a = m3X4, b = nx, out = cxX4);
	Xor (a = m4X4, b = ny, out = cyX4);

	Nand (a = x[5], b = nox, out = m1X5);
	Nand (a = y[5], b = noy, out = m2X5);
	Not (in = m1X5, out = m3X5);
	Not (in = m2X5, out = m4X5);
	Xor (a = m3X5, b = nx, out = cxX5);
	Xor (a = m4X5, b = ny, out = cyX5);

	Nand (a = x[6], b = nox, out = m1X6);
	Nand (a = y[6], b = noy, out = m2X6);
	Not (in = m1X6, out = m3X6);
	Not (in = m2X6, out = m4X6);
	Xor (a = m3X6, b = nx, out = cxX6);
	Xor (a = m4X6, b = ny, out = cyX6);

	Nand (a = x[7], b = nox, out = m1X7);
	Nand (a = y[7], b = noy, out = m2X7);
	Not (in = m1X7, out = m3X7);
	Not (in = m2X7, out = m4X7);
	Xor (a = m3X7, b = nx, out = cxX7);
	Xor (a = m4X7, b = ny, out = cyX7);

	Nand (a = x[8], b = nox, out = m1X8);
	Nand (a = y[8], b = noy, out = m2X8);
	Not (in = m1X8, out = m3X8);
	Not (in = m2X8, out = m4X8);
	Xor (a = m3X8, b = nx, out = cxX8);
	Xor (a = m4X8, b = ny, out = cyX8);

	Nand (a = x[9], b = nox, out = m1X9);
	Nand (a = y[9], b = noy, out = m2X9);
	Not (in = m1X9, out = m3X9);
	Not (in = m2X9, out = m4X9);
	Xor (a = m3X9, b = nx, out = cxX9);
	Xor (a = m4X9, b = ny, out = cyX9);

	Nand (a = x[10], b = nox, out = m1X10);
	Nand (a = y[10], b = noy, out = m2X10);
	Not (in = m1X10, out = m3X10);
	Not (in = m2X10, out = m4X10);
	Xor (a = m3X10, b = nx, out = cxX10);
	Xor (a = m4X10, b = ny, out = cyX10);

	Nand (a = x[11], b = nox, out = m1X11);
	Nand (a = y[11], b = noy, out = m2X11);
	Not (in = m1X11, out = m3X11);
	Not (in = m2X11, out = m4X11);
	Xor (a = m3X11, b = nx, out = cxX11);
	Xor (a = m4X11, b = ny, out = cyX11);

	Nand (a = x[12], b = nox, out = m1X12);
	Nand (a = y[12], b = noy, out = m2X12);
	Not (in = m1X12, out = m3X12);
	Not (in = m2X12, out = m4X12);
	Xor (a = m3X12, b = nx, out = cxX12);
	Xor (a = m4X12, b = ny, out = cyX12);

	Nand (a = x[13], b = nox, out = m1X13);
	Nand (a = y[13], b = noy, out = m2X13);
	Not (in = m1X13, out = m3X13);
	Not (in = m2X13, out = m4X13);
	Xor (a = m3X13, b = nx, out = cxX13);
	Xor (a = m4X13, b = ny, out = cyX13);

	Nand (a = x[14], b = nox, out = m1X14);
	Nand (a = y[14], b = noy, out = m2X14);
	Not (in = m1X14, out = m3X14);
	Not (in = m2X14, out = m4X14);
	Xor (a = m3X14, b = nx, out = cxX14);
	Xor (a = m4X14, b = ny, out = cyX14);

	Nand (a = x[15], b = nox, out = m1X15);
	Nand (a = y[15], b = noy, out = m2X15);
	Not (in = m1X15, out = m3X15);
	Not (in = m2X15, out = m4X15);
	Xor (a = m3X15, b = nx, out = cxX15);
	Xor (a = m4X15, b = ny, out = cyX15);
	

	//-------M_C
	

	Nand (a = cxX0, b = cyX0, out = b1X0);
    Nand (a = b1X0, b = cxX0, out = b2X0);
    Nand (a = b1X0, b = cyX0, out = b3X0);
    Nand (a = b1X0, b = b1X0, out = bR0);
    Nand (a = b2X0, b = b3X0, out = b4X0);
    Nand (a = bR0, b = nf, out = b5X0);
    Nand (a = b4X0, b = f, out = b6X0);
    Nand (a = b5X0, b = b6X0, out = b7X0);
    Xor (a = b7X0, b = no, out = out[0]);

    //--------

    Nand (a = cxX{i}, b = cyX{i}, out = b1X{i});\n\
    Not (in = b1X{i}, out = b2X{i});\n\
    Nand (a = cxX{i}, b = b1X{i}, out = b3X{i});\n\
    Nand (a = b1X{i}, b = cyX{i}, out = b4X{i});\n\
    Nand (a = b3X{i}, b = b4X{i}, out = b5X{i});\n\
    Nand (a = b2X{i}, b = nf, out = b6X{i});\n\
    Nand (a = b5X{i}, b = bR{i-1}, out = b7X{i});\n\
    Nand (a = b1X{i}, b = b7X{i}{i}, out = b8X{i});\n\
    Nand (a = b5X{i}, b = b7X{i}, out = b9X{i});\n\
    Nand (a = b7X{i}, b = bR{i-1}, out = b10X{i});\n\
    Nand (a = f, b = b8X{i}, out = b11X{i});\n\
    Nand (a = b9X{i}, b = b10X{i}, out = b12X{i});\n\
    Not (in = b11X{i}, out = bR{i});\n\
    Nand (a = b12X{i}, b = f, out = b13X{i});\n\
    Nand (a = b13X{i}, b = b6X{i}, out = b14X{i});\n\
    Xor (a = b14X{i}, b = no, out = out[{i}]);\n

    Nand (a = cxX2, b = cyX2, out = b1X2);
    Nand (a = b1X2, b = cxX2, out = b2X2);
    Nand (a = b1X2, b = cyX2, out = b3X2);
    Nand (a = b1X2, b = f, out = b4X2);
    Nand (a = b2X2, b = b3X2, out = b5X2);
    Nand (a = b5X2, b = bRX1, out = b6X2);
    Nand (a = b1X2, b = b6X2, out = bRX2);
    Nand (a = b5X2, b = b6X2, out = b7X2);
    Nand (a = b6X2, b = bRX1, out = b8X2);
    Nand (a = b7X2, b = b8X2, out = b9X2);
    Nand (a = b9X2, b = nf, out = b10X2);
    Nand (a = b4X2, b = b10X2, out = b11X2);
    Xor (a = b11X2, b = no, out = out[2]);

    Nand (a = cxX3, b = cyX3, out = b1X3);
    Nand (a = b1X3, b = cxX3, out = b2X3);
    Nand (a = b1X3, b = cyX3, out = b3X3);
    Nand (a = b1X3, b = f, out = b4X3);
    Nand (a = b2X3, b = b3X3, out = b5X3);
    Nand (a = b5X3, b = bRX2, out = b6X3);
    Nand (a = b1X3, b = b6X3, out = bRX3);
    Nand (a = b5X3, b = b6X3, out = b7X3);
    Nand (a = b6X3, b = bRX2, out = b8X3);
    Nand (a = b7X3, b = b8X3, out = b9X3);
    Nand (a = b9X3, b = nf, out = b10X3);
    Nand (a = b4X3, b = b10X3, out = b11X3);
    Xor (a = b11X3, b = no, out = out[3]);

    Nand (a = cxX4, b = cyX4, out = b1X4);
    Nand (a = b1X4, b = cxX4, out = b2X4);
    Nand (a = b1X4, b = cyX4, out = b3X4);
    Nand (a = b1X4, b = f, out = b4X4);
    Nand (a = b2X4, b = b3X4, out = b5X4);
    Nand (a = b5X4, b = bRX3, out = b6X4);
    Nand (a = b1X4, b = b6X4, out = bRX4);
    Nand (a = b5X4, b = b6X4, out = b7X4);
    Nand (a = b6X4, b = bRX3, out = b8X4);
    Nand (a = b7X4, b = b8X4, out = b9X4);
    Nand (a = b9X4, b = nf, out = b10X4);
    Nand (a = b4X4, b = b10X4, out = b11X4);
    Xor (a = b11X4, b = no, out = out[4]);

    Nand (a = cxX5, b = cyX5, out = b1X5);
    Nand (a = b1X5, b = cxX5, out = b2X5);
    Nand (a = b1X5, b = cyX5, out = b3X5);
    Nand (a = b1X5, b = f, out = b4X5);
    Nand (a = b2X5, b = b3X5, out = b5X5);
    Nand (a = b5X5, b = bRX4, out = b6X5);
    Nand (a = b1X5, b = b6X5, out = bRX5);
    Nand (a = b5X5, b = b6X5, out = b7X5);
    Nand (a = b6X5, b = bRX4, out = b8X5);
    Nand (a = b7X5, b = b8X5, out = b9X5);
    Nand (a = b9X5, b = nf, out = b10X5);
    Nand (a = b4X5, b = b10X5, out = b11X5);
    Xor (a = b11X5, b = no, out = out[5]);

    Nand (a = cxX6, b = cyX6, out = b1X6);
    Nand (a = b1X6, b = cxX6, out = b2X6);
    Nand (a = b1X6, b = cyX6, out = b3X6);
    Nand (a = b1X6, b = f, out = b4X6);
    Nand (a = b2X6, b = b3X6, out = b5X6);
    Nand (a = b5X6, b = bRX5, out = b6X6);
    Nand (a = b1X6, b = b6X6, out = bRX6);
    Nand (a = b5X6, b = b6X6, out = b7X6);
    Nand (a = b6X6, b = bRX5, out = b8X6);
    Nand (a = b7X6, b = b8X6, out = b9X6);
    Nand (a = b9X6, b = nf, out = b10X6);
    Nand (a = b4X6, b = b10X6, out = b11X6);
    Xor (a = b11X6, b = no, out = out[6]);

    Nand (a = cxX7, b = cyX7, out = b1X7);
    Nand (a = b1X7, b = cxX7, out = b2X7);
    Nand (a = b1X7, b = cyX7, out = b3X7);
    Nand (a = b1X7, b = f, out = b4X7);
    Nand (a = b2X7, b = b3X7, out = b5X7);
    Nand (a = b5X7, b = bRX6, out = b6X7);
    Nand (a = b1X7, b = b6X7, out = bRX7);
    Nand (a = b5X7, b = b6X7, out = b7X7);
    Nand (a = b6X7, b = bRX6, out = b8X7);
    Nand (a = b7X7, b = b8X7, out = b9X7);
    Nand (a = b9X7, b = nf, out = b10X7);
    Nand (a = b4X7, b = b10X7, out = b11X7);
    Xor (a = b11X7, b = no, out = out[7]);

    Nand (a = cxX8, b = cyX8, out = b1X8);
    Nand (a = b1X8, b = cxX8, out = b2X8);
    Nand (a = b1X8, b = cyX8, out = b3X8);
    Nand (a = b1X8, b = f, out = b4X8);
    Nand (a = b2X8, b = b3X8, out = b5X8);
    Nand (a = b5X8, b = bRX7, out = b6X8);
    Nand (a = b1X8, b = b6X8, out = bRX8);
    Nand (a = b5X8, b = b6X8, out = b7X8);
    Nand (a = b6X8, b = bRX7, out = b8X8);
    Nand (a = b7X8, b = b8X8, out = b9X8);
    Nand (a = b9X8, b = nf, out = b10X8);
    Nand (a = b4X8, b = b10X8, out = b11X8);
    Xor (a = b11X8, b = no, out = out[8]);

    Nand (a = cxX9, b = cyX9, out = b1X9);
    Nand (a = b1X9, b = cxX9, out = b2X9);
    Nand (a = b1X9, b = cyX9, out = b3X9);
    Nand (a = b1X9, b = f, out = b4X9);
    Nand (a = b2X9, b = b3X9, out = b5X9);
    Nand (a = b5X9, b = bRX8, out = b6X9);
    Nand (a = b1X9, b = b6X9, out = bRX9);
    Nand (a = b5X9, b = b6X9, out = b7X9);
    Nand (a = b6X9, b = bRX8, out = b8X9);
    Nand (a = b7X9, b = b8X9, out = b9X9);
    Nand (a = b9X9, b = nf, out = b10X9);
    Nand (a = b4X9, b = b10X9, out = b11X9);
    Xor (a = b11X9, b = no, out = out[9]);

    Nand (a = cxX10, b = cyX10, out = b1X10);
    Nand (a = b1X10, b = cxX10, out = b2X10);
    Nand (a = b1X10, b = cyX10, out = b3X10);
    Nand (a = b1X10, b = f, out = b4X10);
    Nand (a = b2X10, b = b3X10, out = b5X10);
    Nand (a = b5X10, b = bRX9, out = b6X10);
    Nand (a = b1X10, b = b6X10, out = bRX10);
    Nand (a = b5X10, b = b6X10, out = b7X10);
    Nand (a = b6X10, b = bRX9, out = b8X10);
    Nand (a = b7X10, b = b8X10, out = b9X10);
    Nand (a = b9X10, b = nf, out = b10X10);
    Nand (a = b4X10, b = b10X10, out = b11X10);
    Xor (a = b11X10, b = no, out = out[10]);

    Nand (a = cxX11, b = cyX11, out = b1X11);
    Nand (a = b1X11, b = cxX11, out = b2X11);
    Nand (a = b1X11, b = cyX11, out = b3X11);
    Nand (a = b1X11, b = f, out = b4X11);
    Nand (a = b2X11, b = b3X11, out = b5X11);
    Nand (a = b5X11, b = bRX10, out = b6X11);
    Nand (a = b1X11, b = b6X11, out = bRX11);
    Nand (a = b5X11, b = b6X11, out = b7X11);
    Nand (a = b6X11, b = bRX10, out = b8X11);
    Nand (a = b7X11, b = b8X11, out = b9X11);
    Nand (a = b9X11, b = nf, out = b10X11);
    Nand (a = b4X11, b = b10X11, out = b11X11);
    Xor (a = b11X11, b = no, out = out[11]);

    Nand (a = cxX12, b = cyX12, out = b1X12);
    Nand (a = b1X12, b = cxX12, out = b2X12);
    Nand (a = b1X12, b = cyX12, out = b3X12);
    Nand (a = b1X12, b = f, out = b4X12);
    Nand (a = b2X12, b = b3X12, out = b5X12);
    Nand (a = b5X12, b = bRX11, out = b6X12);
    Nand (a = b1X12, b = b6X12, out = bRX12);
    Nand (a = b5X12, b = b6X12, out = b7X12);
    Nand (a = b6X12, b = bRX11, out = b8X12);
    Nand (a = b7X12, b = b8X12, out = b9X12);
    Nand (a = b9X12, b = nf, out = b10X12);
    Nand (a = b4X12, b = b10X12, out = b11X12);
    Xor (a = b11X12, b = no, out = out[12]);

    Nand (a = cxX13, b = cyX13, out = b1X13);
    Nand (a = b1X13, b = cxX13, out = b2X13);
    Nand (a = b1X13, b = cyX13, out = b3X13);
    Nand (a = b1X13, b = f, out = b4X13);
    Nand (a = b2X13, b = b3X13, out = b5X13);
    Nand (a = b5X13, b = bRX12, out = b6X13);
    Nand (a = b1X13, b = b6X13, out = bRX13);
    Nand (a = b5X13, b = b6X13, out = b7X13);
    Nand (a = b6X13, b = bRX12, out = b8X13);
    Nand (a = b7X13, b = b8X13, out = b9X13);
    Nand (a = b9X13, b = nf, out = b10X13);
    Nand (a = b4X13, b = b10X13, out = b11X13);
    Xor (a = b11X13, b = no, out = out[13]);

    Nand (a = cxX14, b = cyX14, out = b1X14);
    Nand (a = b1X14, b = cxX14, out = b2X14);
    Nand (a = b1X14, b = cyX14, out = b3X14);
    Nand (a = b1X14, b = f, out = b4X14);
    Nand (a = b2X14, b = b3X14, out = b5X14);
    Nand (a = b5X14, b = bRX13, out = b6X14);
    Nand (a = b1X14, b = b6X14, out = bRX14);
    Nand (a = b5X14, b = b6X14, out = b7X14);
    Nand (a = b6X14, b = bRX13, out = b8X14);
    Nand (a = b7X14, b = b8X14, out = b9X14);
    Nand (a = b9X14, b = nf, out = b10X14);
    Nand (a = b4X14, b = b10X14, out = b11X14);
    Xor (a = b11X14, b = no, out = out[14]);

    Nand (a = cxX15, b = cyX15, out = b1X15);
    Nand (a = b1X15, b = cxX15, out = b2X15);
    Nand (a = b1X15, b = cyX15, out = b3X15);
    Nand (a = b1X15, b = f, out = b4X15);
    Nand (a = b2X15, b = b3X15, out = b5X15);
    Nand (a = b5X15, b = bRX14, out = b6X15);
    Nand (a = b1X15, b = b6X15, out = bRX15);
    Nand (a = b5X15, b = b6X15, out = b7X15);
    Nand (a = b6X15, b = bRX14, out = b8X15);
    Nand (a = b7X15, b = b8X15, out = b9X15);
    Nand (a = b9X15, b = nf, out = b10X15);
    Nand (a = b4X15, b = b10X15, out = b11X15);
    Xor (a = b11X15, b = no, out = out[15]);
}
