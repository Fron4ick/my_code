Static Site Generation (SSG) — это способ создания веб-сайтов, при котором все страницы заранее генерируются в виде статических HTML-файлов на этапе сборки сайта, а не во время запроса пользователя. Такой подход отличается от динамического рендеринга, при котором страницы создаются на сервере или в браузере пользователя непосредственно при заходе на сайт.

## Основные преимущества SSG
- Быстрая загрузка страниц, так как пользователю сразу отдается готовый HTML.
- Высокая производительность и низкая нагрузка на сервер, что выгодно при большом потоке посетителей.
- Хорошая SEO-оптимизация, так как поисковые системы видят полноценные HTML-страницы.
- Простота хостинга: статические файлы можно разместить на CDN, что увеличивает доступность сайта.

## Как работает SSG?
Процесс генерации происходит до запуска сайта:
1. Входные данные (например, Markdown-файлы с контентом) и шаблоны передаются генератору.
2. Генератор создает статичные HTML-страницы для каждого элемента сайта.
3. Полученный набор HTML-файлов загружается на сервер или CDN.

При посещении сайта пользователи получают готовые HTML-файлы без дополнительной обработки.

## Практический пример
Представим блог, написанный в Markdown. С помощью SSG (например, генератора Hugo или Jekyll) в процессе сборки создаются HTML-файлы для каждой статьи. Когда пользователь открывает страницу блога, сервер сразу отдает этот HTML, а браузер просто отображает готовый сайт. Если нужно обновить содержимое — делается новая сборка и развертывание сайта.

Такой способ отлично подходит для сайтов с редко меняющимся контентом, например документации, новостных статей, лендингов и корпоративных сайтов.[1][5][7]

[1](https://habr.com/ru/companies/domclick/articles/902938/)
[2](https://soliddev.ru/references/concepts/ssr/ssg/)
[3](https://qwik-docs-ru.pages.dev/docs/guides/static-site-generation/)
[4](https://www.reddit.com/r/webdev/comments/xfra7q/what_is_ssg_static_site_generation/)
[5](https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B_%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D1%85_%D1%81%D0%B0%D0%B9%D1%82%D0%BE%D0%B2)
[6](http://old-dos.ru/books/2/a/4/ComputerPress-1994-07.pdf)
[7](https://traff-agency.ru/blog/%D0%BE%D0%BF%D1%82%D0%B8%D0%BC%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D1%81%D0%B0%D0%B9%D1%82%D0%BE%D0%B2-%D0%BD%D0%B0-react-ssr-vs-ssg-vs-csr/)
[8](https://rocketdev.pro/blog/optimizaciya-proizvoditelnosti-sajtov-na-next-js)
[9](https://habr.com/ru/companies/alfa/articles/725626/)
[10](https://www.hackfrontend.com/docs/general-questions/csr-ssr-ssg-isr)
[11](https://shadowhint.com/questions/question/d9c5f46c-045e-4057-8630-e29d5ef354cc)
